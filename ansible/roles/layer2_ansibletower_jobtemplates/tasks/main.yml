- block:
    - name: remove project directory
      file: path="{{ projects_dir }}/{{ project_dir }}" state=absent

    - name: create project directory
      file: path="{{ projects_dir }}/{{ project_dir }}" state=directory group=awx owner=awx

    - name: create temp file name
      local_action: command mktemp -u
      register: mktemp
      failed_when: mktemp.stdout == ""

    - name: create playbook archive
      local_action: "shell cd {{ content_location }} && tar czf {{ mktemp.stdout }}.tgz ."

    - name: unzip archive on tower
      unarchive: src="{{ mktemp.stdout }}.tgz" dest="{{ projects_dir }}/{{ project_dir }}" owner=awx group=awx

    - name: remove zip file
      local_action: file name="{{ mktemp.stdout }}.tgz" state=absent

## create tower project (which can be used to reference the playbooks)
    - include: roles/common/tasks/get_or_add.yml
      vars:
        url: "/api/v1/organizations"
        name: "Default"
        var: "organization"

    - include: roles/common/tasks/get_or_add.yml
      vars:
        url: "/api/v1/projects/"
        name: "{{ project_dir }}"
        body: "{{ lookup('template','project.json.j2') }}"
        var: "project"

    - include: roles/common/tasks/get_or_add.yml
      vars:
        url: "/api/v1/inventories/"
        name: "{{ inventoryname }}"
        var: "inventory"

    - include: roles/common/tasks/get_or_add.yml
      vars:
        url: "/api/v1/credentials/"
        name: "{{ inventoryname }} SSH"
        var: "credential"

    - name: find top level playbooks
      local_action: find paths={{ content_location }} patterns="*.yml" recurse=no
      register: playbooks

    - name: find top level extra variables descriptions
      local_action: find paths={{ content_location }} patterns="*.extravars" recurse=no
      register: extravars

    - include: roles/common/tasks/get_or_add.yml
      vars:
        url: "/api/v1/job_templates/"
        name: "{{ item|basename }}"
        body: "{{ lookup('template','job_template.json.j2') }}"
      with_items: "{% if playbooks.files is defined %}{{ playbooks.files|map(attribute='path')|list }}{% endif %}"

  when: mode=="create"
