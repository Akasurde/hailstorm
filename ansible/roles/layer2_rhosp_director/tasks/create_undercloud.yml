- name: create undercloud.conf
  template: src=undercloud.conf.j2 dest=~/undercloud.conf mode=0644
  become: yes
  become_user: "{{ rhosp_stack_user }}"
  notify: install undercloud (you can grab a coffee now, this takes a while)
- meta: flush_handlers

#- name: configure DNS for undercloud

# tweak timeouts
- command: openstack-config --set /etc/nova/nova.conf DEFAULT rpc_response_timeout 600
- command: openstack-config --set /etc/ironic/ironic.conf DEFAULT rpc_response_timeout 600
- command: openstack-service restart nova
- command: openstack-service restart ironic

# install bootif fix
- name: create bootif-fix command
  copy: src=../templates/bootif-fix dest=/usr/bin/bootif-fix mode=0755
- name: create bootif-fix service
  copy: src=../templates/bootif-fix.service dest=/usr/lib/systemd/system/bootif-fix.service mode=0644
- name: start bootif-fix
  service: name=bootif-fix state=started
- name: enabled bootif-fix
  service: name=bootif-fix enabled=yes

#upload images to Glance
- name: create image directory
  file: state=directory path={{ image_path }}
  become: yes
  become_user: "{{ rhosp_stack_user }}"
- shell: . ~/stackrc && openstack image list -f csv | wc -l
  register: image_count
- name: unpack deploy ramdisk image
  unarchive: src=../binary/{{ deploy_ramdisk_image }} dest={{ image_path }} creates=deploy-ramdisk-ironic.initramfs
  become: yes
  become_user: "{{ rhosp_stack_user }}"
  when: image_count.stdout | int < 6
- name: unpack discovery ramdisk image
  unarchive: src=../binary/{{ discovery_ramdisk_image }} dest={{ image_path }} creates=discovery-ramdisk.initramfs
  become: yes
  become_user: "{{ rhosp_stack_user }}"
  when: image_count.stdout | int < 6
- name: unpack overcloud image
  unarchive: src=../binary/{{ overcloud_image }} dest={{ image_path }} creates=overcloud-full.initrd
  become: yes
  become_user: "{{ rhosp_stack_user }}"
  when: image_count.stdout | int < 6
- name: upload images to glance
  shell: . ~/stackrc && openstack overcloud image upload --image-path "{{ image_path }}"
  become: yes
  become_user: "{{ rhosp_stack_user }}"
  when: image_count.stdout | int < 6

#configure DNS for provisioning Network
- name: determine network UUID
  shell: . ~/stackrc && neutron subnet-list -f csv -F id --quote none | grep -v id
  register: neutron_uuid
  become: yes
  become_user: "{{ rhosp_stack_user }}"
- name: configure DNS for provisioning network
  shell: . ~/stackrc && neutron subnet-update "{{ neutron_uuid.stdout }}" --dns-nameserver {{ hostvars[groups['layer1'][0]].network_default.gw_ip }}
  become: yes
  become_user: "{{ rhosp_stack_user }}"

- name: create instackenv.json
  template: src=instackenv.json.j2 dest=~/instackenv.json mode=0644
  become: yes
  become_user: "{{ rhosp_stack_user }}"
- name: import baremetal devs to ironic
  shell: . ~/stackrc && openstack baremetal import --json ~/instackenv.json
  become: yes
  become_user: "{{ rhosp_stack_user }}"
- name: configure boot
  shell: . ~/stackrc && openstack baremetal configure boot
  become: yes
  become_user: "{{ rhosp_stack_user }}"
#- name: discover nodes
#  command: openstack baremetal introspection bulk start
#  become: yes
#  become_user: "{{ rhosp_stack_user }}"
