# Enable the creation of Neutron networks for isolated Overcloud
# traffic and configure each role to assign ports (related
# to that role) on these networks.
resource_registry:
  OS::TripleO::Network::External: {{ tripleo_template_path }}/network/external.yaml
  OS::TripleO::Network::InternalApi: {{ tripleo_template_path }}/network/internal_api.yaml
  OS::TripleO::Network::StorageMgmt: {{ tripleo_template_path }}/network/storage_mgmt.yaml
  OS::TripleO::Network::Storage: {{ tripleo_template_path }}/network/storage.yaml
  OS::TripleO::Network::Tenant: {{ tripleo_template_path }}/network/tenant.yaml

  # Port assignments for the VIPs
  OS::TripleO::Network::Ports::ExternalVipPort: {{ tripleo_template_path }}/network/ports/external.yaml
  OS::TripleO::Network::Ports::InternalApiVipPort: {{ tripleo_template_path }}/network/ports/internal_api.yaml
  OS::TripleO::Network::Ports::StorageVipPort: {{ tripleo_template_path }}/network/ports/storage.yaml
  OS::TripleO::Network::Ports::StorageMgmtVipPort: {{ tripleo_template_path }}/network/ports/storage_mgmt.yaml
  OS::TripleO::Network::Ports::TenantVipPort: {{ tripleo_template_path }}/network/ports/tenant.yaml
  OS::TripleO::Network::Ports::RedisVipPort: {{ tripleo_template_path }}/network/ports/vip.yaml

  # Port assignments for the controller role
  OS::TripleO::Controller::Ports::ExternalPort: {{ tripleo_template_path }}/network/ports/external.yaml
  OS::TripleO::Controller::Ports::InternalApiPort: {{ tripleo_template_path }}/network/ports/internal_api.yaml
  OS::TripleO::Controller::Ports::StoragePort: {{ tripleo_template_path }}/network/ports/storage.yaml
  OS::TripleO::Controller::Ports::StorageMgmtPort: {{ tripleo_template_path }}/network/ports/storage_mgmt.yaml
  OS::TripleO::Controller::Ports::TenantPort: {{ tripleo_template_path }}/network/ports/tenant.yaml

  # Port assignments for the compute role
  OS::TripleO::Compute::Ports::InternalApiPort: {{ tripleo_template_path }}/network/ports/internal_api.yaml
  OS::TripleO::Compute::Ports::StoragePort: {{ tripleo_template_path }}/network/ports/storage.yaml
  OS::TripleO::Compute::Ports::TenantPort: {{ tripleo_template_path }}/network/ports/tenant.yaml

  # Port assignments for the ceph storage role
  OS::TripleO::CephStorage::Ports::StoragePort: {{ tripleo_template_path }}/network/ports/storage.yaml
  OS::TripleO::CephStorage::Ports::StorageMgmtPort: {{ tripleo_template_path }}/network/ports/storage_mgmt.yaml

  # NIC Configs for our roles
  OS::TripleO::Compute::Net::SoftwareConfig: {{ tripleo_template_path }}/nic-configs/compute.yaml
  OS::TripleO::Controller::Net::SoftwareConfig: {{ tripleo_template_path }}/nic-configs/controller.yaml
{#  OS::TripleO::CephStorage::Net::SoftwareConfig: {{ tripleo_template_path }}/nic-configs/ceph-storage.yaml #}

  # Invoke custom cloud init script:
  OS::TripleO::NodeUserData: {{ tripleo_template_path }}/firstboot-config.yaml

parameter_defaults:
  # Internal API used for private OpenStack Traffic
  InternalApiNetCidr: 172.17.1.0/24
  InternalApiAllocationPools: [{'start': '172.17.1.10', 'end': '172.17.1.200'}]
  InternalApiNetworkVlanID: 101

  # Tenant Network Traffic - will be used for VXLAN over VLAN
  TenantNetCidr: 172.17.2.0/24
  TenantAllocationPools: [{'start': '172.17.2.10', 'end': '172.17.2.200'}]
  TenantNetworkVlanID: 201

  # Public Storage Access - e.g. Nova/Glance <--> Ceph
  StorageNetCidr: 172.17.3.0/24
  StorageAllocationPools: [{'start': '172.17.3.10', 'end': '172.17.3.200'}]
  StorageNetworkVlanID: 301

  # Private Storage Access - i.e. Ceph background cluster/replication
  StorageMgmtNetCidr: 172.17.4.0/24
  StorageMgmtAllocationPools: [{'start': '172.17.4.10', 'end': '172.17.4.200'}]
  StorageMgmtNetworkVlanID: 401

{% for network in hostvars[groups['layer1'][0]].networks %}
{% if network.name == nic[1].network %}
  # External Networking Access - Public API Access
{# ExternalNetCidr: 192.168.122.0/24 #}
  ExternalNetCidr: {{ network.host_prefix | ipaddr('network') }}/{{ network.host_prefix | ipaddr('prefix') }}
  # Leave room for floating IPs in the External allocation pool (if required)
{# ExternalAllocationPools: [{'start': '192.168.122.100', 'end': '192.168.122.129'}] #}
  ExternalAllocationPools: [{'start': '{{ network.floating_start }}', 'end': '{{ network.floating_end }}'}]
  # Set to the router gateway on the external network
{# ExternalInterfaceDefaultRoute: 192.168.122.1 #}
  ExternalInterfaceDefaultRoute: {{ network.host_prefix | ipaddr('address') }}
{% endif %}
{% endfor %}


  # Add in configuration for the Control Plane
{#ControlPlaneSubnetCidr: "24"
  ControlPlaneDefaultRoute: 172.16.0.1
  EC2MetadataIp: 172.16.0.1
  DnsServers: ['192.168.122.1', '8.8.8.8'] #}
  ControlPlaneSubnetCidr: "{{ hostvars[groups['layer1'][0]].network_rhosp_provisioning.host_prefix | ipaddr('prefix') }}"
  ControlPlaneDefaultRoute: {{ hostvars[groups['layer1'][0]].network_rhosp_provisioning.host_prefix | ipaddr('address') }}
  EC2MetadataIp: {{ hostvars[groups['layer1'][0]].network_rhosp_provisioning.host_prefix | ipaddr('address')  }}
  DnsServers: ['{{ hostvars[groups['layer1'][0]].network_default.host_prefix | ipaddr('address') }}']
