---
- block:
    - name: check if epel is installed
      shell: rpm -q epel-release
      changed_when: false
      ignore_errors: true
      register: epel

    - name: install epel-release
      command: yum -y localinstall {{ epel_rpm }}
      when: epel|failed

    - name: check if installer dir exists
      stat: path={{ current_lifecycle_env.ansible_tower_url | basename | regex_replace('.tar.gz','') }}
      register: installer_dir

    - name: download & unpack tower installer
      shell: curl {{ current_lifecycle_env.ansible_tower_url }} | tar xzvf -
      when: not installer_dir.stat.exists

    - name: adjust inventory
      template: src=inventory.j2 dest={{ current_lifecycle_env.ansible_tower_url | basename | regex_replace('.tar.gz','') }}/inventory
      register: inventory

    - name: run tower installer
      shell: cd {{ current_lifecycle_env.ansible_tower_url | basename | regex_replace('.tar.gz','') }} && ./setup.sh
      when: inventory|changed

    - name: get tower config info
      shell: >
        curl -k -u admin:{{ root_password }}
        -H 'Accept: application/json'
        -XGET https://localhost/api/v1/config/
      register: config
      changed_when: false

    #- debug: var=config

    - name: add tower license
      shell: >
        curl -k -u admin:{{ root_password }}
        -H 'Content-Type: application/json'
        -H 'Accept: application/json'
        -d'{{ lookup('file', 'binary/' + tower_license_key_file) | from_json | combine({"eula_accepted":"true"}) | to_json }}'
        -XPOST https://localhost/api/v1/config/
      when: (config.stdout|from_json)['license_info']|length == 0
      register: config2

    #- debug: var=config2

    - name: enable LDAP integration
      template: src=ldap.py.j2 dest=/etc/tower/conf.d/ldap.py
      register: ldapconf
    - name: restart tower
      shell: ansible-tower-service restart
      when: ldapconf|changed

  when: mode=="create"


- block:
    - debug: msg="not implemented yet"
  when: mode=="destroy"
