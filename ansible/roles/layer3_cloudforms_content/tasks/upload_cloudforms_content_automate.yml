- name: create temp dir
  local_action: command mktemp -d
  register: mktemp_directory
  failed_when: mktemp_directory.stdout == ""
#- debug: var=mktemp_directory
- name: copy automate content to temp dir
  local_action: shell cd {{ content_location }} && cp -r automate/* {{ mktemp_directory.stdout }}

- name: find jinja2 templates
  local_action: find paths="{{ mktemp_directory.stdout }}" patterns="*.j2" recurse=yes
  register: templates
#- debug: var=templates
- name: apply templates (overwriting existing files if necessary)
  local_action: template src="{{ item }}" dest="{{ item | regex_replace('.j2$','') }}"
  with_items: "{{ templates.files | map(attribute='path') | list }}"
- name: remove template
  local_action: file path="{{ item }}" state=absent
  with_items: "{{ templates.files | map(attribute='path') | list }}"

- name: create temp file name
  local_action: command mktemp
  register: mktemp
- name: remove temp file
  local_action: file name={{ mktemp.stdout }} state=absent
- name: create local zip file of Cloudforms Content and reset default datastores
  local_action: shell cd {{ mktemp_directory.stdout }} && zip -rq {{ mktemp.stdout }} .
- name: remove temp dir
  local_action: file name={{ mktemp_directory.stdout }} state=absent

- name: upload zip file to CF
  copy: src={{ mktemp.stdout }} dest=/tmp/import.zip mode=0644
- name: remove temp file locally
  local_action: file name={{ mktemp.stdout }} state=absent
- name: import zip file and reset default datastores
  shell: cd /var/www/miq/vmdb && rake evm:automate:restore BACKUP_ZIP_FILE=/tmp/import.zip && rake evm:automate:reset
- name: remove temp file on cfme
  file: name=/tmp/import.zip state=absent
